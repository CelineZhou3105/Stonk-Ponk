# Generated by Django 3.1.7 on 2021-04-20 12:09

import account.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('security_question', models.CharField(default='security question', max_length=50, verbose_name='security question')),
                ('security_answer', models.CharField(default='security answer', max_length=30, verbose_name='security answer')),
                ('profile_picture', models.FileField(default=('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\n',), upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
