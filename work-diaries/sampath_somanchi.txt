Week 1: 
This week I accepted the position of backend engineer on this project. I have engaged in conversations with my team on how the architecture and tech stack would look like. As part of my role deliverable I have indentified data sources from which we can pull financial data on US stocks. 

We have also set up a Git Lab repo to store all of our work. I have set up a vs code environment on which I will be working. 

Week 2: 
We set up an in-person team meeting to iron out details. WE agreed upon the architecture and the fact that we will be using an API to connect the front end and the back end. A round table discussion was held to determine what features were most important to us and the product. We examined the different products which exist in the market and attempted to work out the novel features we could implement in our application. We made design decisions too. We determined that the product should have a simple look and feel to it. We determined that our target audience will be new investors with minimal knowledge of the stock market.   

Week 3: 
This week we began doing feasibility tests to see which data sets we could access and began setting up our first sprint. The focus of the first sprint was to create our code base, complete user authentication work and connect the front end to the backend. I worked with Ash to set up mongoDB as our backend user database. This involved a lot of package installations and testing across different platforms (OSX, Win10, Unix). We implemented the database funtionalities to store username and password, and check if a user is a valid user. I was designated to backend with Kevin and Ash. Celine and Rachel were incharge of front end. 

Week 4: 
Going into week 4 we realised that, in order to implement jwt tokens we would have to use the Django framework. This was bought to our attention by Kevin. To resolve this matter we had to rewrite the entire backend including the database. Django apps were used and more structure was introduced to the backend. I assisted in checking the functionalites of the transition, ensuring that the code was doing what it was supposed to. With the new Django framework, structure was introduced in connecting the frontend to the backend. The frontend were making dummy calls to the backend to test functionality. This week I also worked on identifying where we will be recieveing market data from. I also worked with Celine to indentify which data points were needed and their format.

Week 5: 
Going into demoA the team worked on ensuring that the front end and backend were properly routed. An issue that we found was that a lack of communication between front end and backend meant that the usage of the api calls to the backend was understood and implemented differently. We got into a team call and resolved this issue. After our presentation, we had out team retro and we decided on things we could improve on as well as evaluate what went well. I took on the responsibility to try have programming sessions in person, as I felt that we could program faster and have more fun working together in real life as opposed to over discord. This week I settled on using the yahoo_fin api to pull data from and the format in which I would pass the pulled data to the front end. I recieve the data in the form a pandas dataframe and then extract the necessary fields. An issue that I ran into approaching the weekend was that I could only pull market data for US stocks. Whilst I could get ticker information for ASX stocks, I need to figure out a way to pull ASX market data like I do NYSE, DOW and NSDQ data.   
